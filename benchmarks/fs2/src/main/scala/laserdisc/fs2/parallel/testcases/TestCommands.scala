package laserdisc
package fs2
package parallel
package testcases

import laserdisc.all.{lrange, ltrim, mset, rpush, set}
import laserdisc.auto._
import laserdisc.protocol.RESP
import scodec.Codec

private[fs2] trait TestCommandsProtocol extends TestValues {

  protected final val longCmd1  = rpush("key11", longNel1)
  protected final val longCmd2  = set("key12", longString1)
  protected final val longCmd3  = set("key13", 17)
  protected final val longCmd4  = mset(longMulti1)
  protected final val longCmd5  = lrange("key11", 0L, 100L)
  protected final val longCmd6  = set("key21", longString2)
  protected final val longCmd7  = rpush("key22", longNel2)
  protected final val longCmd8  = lrange("key22", 0L, 100L)
  protected final val longCmd9  = set("key23", 17)
  protected final val longCmd10 = mset(longMulti2)
  protected final val longCmd11 = rpush("key31", longNel3)
  protected final val longCmd12 = set("key32", longString3)
  protected final val longCmd13 = mset(longMulti3)
  protected final val longCmd14 = lrange("key31", 0L, 100L)
  protected final val longCmd15 = set("key33", 17)
  protected final val longCmd16 = set("key41", longString4)
  protected final val longCmd17 = set("key42", 17)
  protected final val longCmd18 = rpush("key43", longNel4)
  protected final val longCmd19 = lrange("key43", 0L, 100L)
  protected final val longCmd20 = mset(longMulti4)
  protected final val longCmd21 = rpush("key51", longNel5)
  protected final val longCmd22 = set("key52", longString5)
  protected final val longCmd23 = set("key53", 17)
  protected final val longCmd24 = mset(longMulti5)
  protected final val longCmd25 = lrange("key51", 0L, 100L)
  protected final val longCmd26 = set("key61", longString6)
  protected final val longCmd27 = rpush("key62", longNel6)
  protected final val longCmd28 = lrange("key62", 0L, 100L)
  protected final val longCmd29 = set("key63", 17)
  protected final val longCmd30 = mset(longMulti6)
  protected final val longCmd31 = set("key71", longString7)
  protected final val longCmd32 = set("key72", 17)
  protected final val longCmd33 = rpush("key73", longNel7)
  protected final val longCmd34 = mset(longMulti7)
  protected final val longCmd35 = lrange("key73", 0L, 100L)
  protected final val longCmd36 = set("key81", longString8)
  protected final val longCmd37 = set("key82", 17)
  protected final val longCmd38 = rpush("key83", longNel8)
  protected final val longCmd39 = lrange("key83", 0L, 100L)
  protected final val longCmd40 = mset(longMulti8)

  protected final val shortCmd1  = rpush("key11", shortNel1)
  protected final val shortCmd2  = set("key12", shortString1)
  protected final val shortCmd3  = set("key13", 17)
  protected final val shortCmd4  = mset(shortMulti1)
  protected final val shortCmd5  = lrange("key11", 0L, 4L)
  protected final val shortCmd6  = set("key21", shortString2)
  protected final val shortCmd7  = rpush("key22", shortNel2)
  protected final val shortCmd8  = lrange("key22", 0L, 4L)
  protected final val shortCmd9  = set("key23", 17)
  protected final val shortCmd10 = mset(shortMulti2)
  protected final val shortCmd11 = rpush("key31", shortNel3)
  protected final val shortCmd12 = set("key32", shortString3)
  protected final val shortCmd13 = mset(shortMulti3)
  protected final val shortCmd14 = lrange("key31", 0L, 4L)
  protected final val shortCmd15 = set("key33", 17)
  protected final val shortCmd16 = set("key41", shortString4)
  protected final val shortCmd17 = set("key42", 17)
  protected final val shortCmd18 = rpush("key43", shortNel4)
  protected final val shortCmd19 = lrange("key43", 0L, 4L)
  protected final val shortCmd20 = mset(shortMulti4)
  protected final val shortCmd21 = rpush("key51", shortNel5)
  protected final val shortCmd22 = set("key52", shortString5)
  protected final val shortCmd23 = set("key53", 17)
  protected final val shortCmd24 = mset(shortMulti5)
  protected final val shortCmd25 = lrange("key51", 0L, 4L)
  protected final val shortCmd26 = set("key61", shortString6)
  protected final val shortCmd27 = rpush("key62", shortNel6)
  protected final val shortCmd28 = lrange("key62", 0L, 4L)
  protected final val shortCmd29 = set("key63", 17)
  protected final val shortCmd30 = mset(shortMulti6)
  protected final val shortCmd31 = set("key71", shortString7)
  protected final val shortCmd32 = set("key72", 17)
  protected final val shortCmd33 = rpush("key73", shortNel7)
  protected final val shortCmd34 = mset(shortMulti7)
  protected final val shortCmd35 = lrange("key73", 0L, 4L)
  protected final val shortCmd36 = set("key81", shortString8)
  protected final val shortCmd37 = set("key82", 17)
  protected final val shortCmd38 = rpush("key83", shortNel8)
  protected final val shortCmd39 = lrange("key83", 0L, 4L)
  protected final val shortCmd40 = mset(shortMulti8)

  protected final val longTrim1 = ltrim("key11", Index(0L), Index(200L))
  protected final val longTrim2 = ltrim("key22", Index(0L), Index(200L))
  protected final val longTrim3 = ltrim("key31", Index(0L), Index(200L))
  protected final val longTrim4 = ltrim("key43", Index(0L), Index(200L))
  protected final val longTrim5 = ltrim("key51", Index(0L), Index(200L))
  protected final val longTrim6 = ltrim("key62", Index(0L), Index(200L))
  protected final val longTrim7 = ltrim("key73", Index(0L), Index(200L))
  protected final val longTrim8 = ltrim("key83", Index(0L), Index(200L))

  protected final val shortTrim1 = ltrim("key11", Index(0L), Index(5L))
  protected final val shortTrim2 = ltrim("key22", Index(0L), Index(5L))
  protected final val shortTrim3 = ltrim("key31", Index(0L), Index(5L))
  protected final val shortTrim4 = ltrim("key43", Index(0L), Index(5L))
  protected final val shortTrim5 = ltrim("key51", Index(0L), Index(5L))
  protected final val shortTrim6 = ltrim("key62", Index(0L), Index(5L))
  protected final val shortTrim7 = ltrim("key73", Index(0L), Index(5L))
  protected final val shortTrim8 = ltrim("key83", Index(0L), Index(5L))
}

private[fs2] trait TestCommandsResp extends TestCommandsProtocol {
  protected val longResp1  = longCmd1.encode
  protected val longResp2  = longCmd2.encode
  protected val longResp3  = longCmd3.encode
  protected val longResp4  = longCmd4.encode
  protected val longResp5  = longCmd5.encode
  protected val longResp6  = longCmd6.encode
  protected val longResp7  = longCmd7.encode
  protected val longResp8  = longCmd8.encode
  protected val longResp9  = longCmd9.encode
  protected val longResp10 = longCmd10.encode
  protected val longResp11 = longCmd11.encode
  protected val longResp12 = longCmd12.encode
  protected val longResp13 = longCmd13.encode
  protected val longResp14 = longCmd14.encode
  protected val longResp15 = longCmd15.encode
  protected val longResp16 = longCmd16.encode
  protected val longResp17 = longCmd17.encode
  protected val longResp18 = longCmd18.encode
  protected val longResp19 = longCmd19.encode
  protected val longResp20 = longCmd20.encode
  protected val longResp21 = longCmd21.encode
  protected val longResp22 = longCmd22.encode
  protected val longResp23 = longCmd23.encode
  protected val longResp24 = longCmd24.encode
  protected val longResp25 = longCmd25.encode
  protected val longResp26 = longCmd26.encode
  protected val longResp27 = longCmd27.encode
  protected val longResp28 = longCmd28.encode
  protected val longResp29 = longCmd29.encode
  protected val longResp30 = longCmd30.encode
  protected val longResp31 = longCmd31.encode
  protected val longResp32 = longCmd32.encode
  protected val longResp33 = longCmd33.encode
  protected val longResp34 = longCmd34.encode
  protected val longResp35 = longCmd35.encode
  protected val longResp36 = longCmd36.encode
  protected val longResp37 = longCmd37.encode
  protected val longResp38 = longCmd38.encode
  protected val longResp39 = longCmd39.encode
  protected val longResp40 = longCmd40.encode
  protected val longResp41 = longTrim1.encode
  protected val longResp42 = longTrim2.encode
  protected val longResp43 = longTrim3.encode
  protected val longResp44 = longTrim4.encode
  protected val longResp45 = longTrim5.encode
  protected val longResp46 = longTrim6.encode
  protected val longResp47 = longTrim7.encode
  protected val longResp48 = longTrim8.encode

  protected val shortResp1  = shortCmd1.encode
  protected val shortResp2  = shortCmd2.encode
  protected val shortResp3  = shortCmd3.encode
  protected val shortResp4  = shortCmd4.encode
  protected val shortResp5  = shortCmd5.encode
  protected val shortResp6  = shortCmd6.encode
  protected val shortResp7  = shortCmd7.encode
  protected val shortResp8  = shortCmd8.encode
  protected val shortResp9  = shortCmd9.encode
  protected val shortResp10 = shortCmd10.encode
  protected val shortResp11 = shortCmd11.encode
  protected val shortResp12 = shortCmd12.encode
  protected val shortResp13 = shortCmd13.encode
  protected val shortResp14 = shortCmd14.encode
  protected val shortResp15 = shortCmd15.encode
  protected val shortResp16 = shortCmd16.encode
  protected val shortResp17 = shortCmd17.encode
  protected val shortResp18 = shortCmd18.encode
  protected val shortResp19 = shortCmd19.encode
  protected val shortResp20 = shortCmd20.encode
  protected val shortResp21 = shortCmd21.encode
  protected val shortResp22 = shortCmd22.encode
  protected val shortResp23 = shortCmd23.encode
  protected val shortResp24 = shortCmd24.encode
  protected val shortResp25 = shortCmd25.encode
  protected val shortResp26 = shortCmd26.encode
  protected val shortResp27 = shortCmd27.encode
  protected val shortResp28 = shortCmd28.encode
  protected val shortResp29 = shortCmd29.encode
  protected val shortResp30 = shortCmd30.encode
  protected val shortResp31 = shortCmd31.encode
  protected val shortResp32 = shortCmd32.encode
  protected val shortResp33 = shortCmd33.encode
  protected val shortResp34 = shortCmd34.encode
  protected val shortResp35 = shortCmd35.encode
  protected val shortResp36 = shortCmd36.encode
  protected val shortResp37 = shortCmd37.encode
  protected val shortResp38 = shortCmd38.encode
  protected val shortResp39 = shortCmd39.encode
  protected val shortResp40 = shortCmd40.encode
  protected val shortResp41 = shortTrim1.encode
  protected val shortResp42 = shortTrim2.encode
  protected val shortResp43 = shortTrim3.encode
  protected val shortResp44 = shortTrim4.encode
  protected val shortResp45 = shortTrim5.encode
  protected val shortResp46 = shortTrim6.encode
  protected val shortResp47 = shortTrim7.encode
  protected val shortResp48 = shortTrim8.encode
}

private[fs2] trait TestCommandsBitVector extends TestCommandsResp {

  private[this] val respEncoder = Codec[RESP]

  protected val longBitVector1  = respEncoder.encode(longResp1).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector2  = respEncoder.encode(longResp2).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector3  = respEncoder.encode(longResp3).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector4  = respEncoder.encode(longResp4).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector5  = respEncoder.encode(longResp5).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector6  = respEncoder.encode(longResp6).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector7  = respEncoder.encode(longResp7).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector8  = respEncoder.encode(longResp8).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector9  = respEncoder.encode(longResp9).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector10 = respEncoder.encode(longResp10).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector11 = respEncoder.encode(longResp11).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector12 = respEncoder.encode(longResp12).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector13 = respEncoder.encode(longResp13).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector14 = respEncoder.encode(longResp14).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector15 = respEncoder.encode(longResp15).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector16 = respEncoder.encode(longResp16).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector17 = respEncoder.encode(longResp17).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector18 = respEncoder.encode(longResp18).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector19 = respEncoder.encode(longResp19).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector20 = respEncoder.encode(longResp20).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector21 = respEncoder.encode(longResp21).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector22 = respEncoder.encode(longResp22).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector23 = respEncoder.encode(longResp23).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector24 = respEncoder.encode(longResp24).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector25 = respEncoder.encode(longResp25).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector26 = respEncoder.encode(longResp26).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector27 = respEncoder.encode(longResp27).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector28 = respEncoder.encode(longResp28).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector29 = respEncoder.encode(longResp29).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector30 = respEncoder.encode(longResp30).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector31 = respEncoder.encode(longResp31).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector32 = respEncoder.encode(longResp32).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector33 = respEncoder.encode(longResp33).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector34 = respEncoder.encode(longResp34).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector35 = respEncoder.encode(longResp35).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector36 = respEncoder.encode(longResp36).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector37 = respEncoder.encode(longResp37).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector38 = respEncoder.encode(longResp38).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector39 = respEncoder.encode(longResp39).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector40 = respEncoder.encode(longResp40).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector41 = respEncoder.encode(longResp41).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector42 = respEncoder.encode(longResp42).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector43 = respEncoder.encode(longResp43).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector44 = respEncoder.encode(longResp44).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector45 = respEncoder.encode(longResp45).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector46 = respEncoder.encode(longResp46).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector47 = respEncoder.encode(longResp47).getOrElse(throw new Exception("failed encode"))
  protected val longBitVector48 = respEncoder.encode(longResp48).getOrElse(throw new Exception("failed encode"))

  protected val shortBitVector1  = respEncoder.encode(shortResp1).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector2  = respEncoder.encode(shortResp2).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector3  = respEncoder.encode(shortResp3).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector4  = respEncoder.encode(shortResp4).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector5  = respEncoder.encode(shortResp5).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector6  = respEncoder.encode(shortResp6).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector7  = respEncoder.encode(shortResp7).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector8  = respEncoder.encode(shortResp8).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector9  = respEncoder.encode(shortResp9).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector10 = respEncoder.encode(shortResp10).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector11 = respEncoder.encode(shortResp11).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector12 = respEncoder.encode(shortResp12).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector13 = respEncoder.encode(shortResp13).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector14 = respEncoder.encode(shortResp14).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector15 = respEncoder.encode(shortResp15).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector16 = respEncoder.encode(shortResp16).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector17 = respEncoder.encode(shortResp17).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector18 = respEncoder.encode(shortResp18).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector19 = respEncoder.encode(shortResp19).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector20 = respEncoder.encode(shortResp20).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector21 = respEncoder.encode(shortResp21).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector22 = respEncoder.encode(shortResp22).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector23 = respEncoder.encode(shortResp23).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector24 = respEncoder.encode(shortResp24).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector25 = respEncoder.encode(shortResp25).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector26 = respEncoder.encode(shortResp26).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector27 = respEncoder.encode(shortResp27).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector28 = respEncoder.encode(shortResp28).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector29 = respEncoder.encode(shortResp29).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector30 = respEncoder.encode(shortResp30).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector31 = respEncoder.encode(shortResp31).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector32 = respEncoder.encode(shortResp32).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector33 = respEncoder.encode(shortResp33).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector34 = respEncoder.encode(shortResp34).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector35 = respEncoder.encode(shortResp35).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector36 = respEncoder.encode(shortResp36).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector37 = respEncoder.encode(shortResp37).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector38 = respEncoder.encode(shortResp38).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector39 = respEncoder.encode(shortResp39).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector40 = respEncoder.encode(shortResp40).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector41 = respEncoder.encode(shortResp41).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector42 = respEncoder.encode(shortResp42).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector43 = respEncoder.encode(shortResp43).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector44 = respEncoder.encode(shortResp44).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector45 = respEncoder.encode(shortResp45).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector46 = respEncoder.encode(shortResp46).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector47 = respEncoder.encode(shortResp47).getOrElse(throw new Exception("failed encode"))
  protected val shortBitVector48 = respEncoder.encode(shortResp48).getOrElse(throw new Exception("failed encode"))
}
