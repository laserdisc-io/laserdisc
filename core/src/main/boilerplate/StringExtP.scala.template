package laserdisc
package protocol

trait StringExtP { this: StringBaseP =>
  import StringP.Bitwise
  import shapeless._

  //BITOP
  [..19#final def bitop(key##1: Key, bitwise: Bitwise, [#key2: Key#], destinationKey: Key): Protocol.Aux[NonNegInt] =
    bitop(bitwise, TwoOrMoreKeys.unsafeFrom(key##1 :: [#key2# :: ] :: Nil), destinationKey)#
  ]

  //MGET
  [#final def mget[A: Arr ==> ?]([#key1: Key#]): Protocol.Aux[A] =
    mget[A](OneOrMoreKeys.unsafeFrom([#key1# :: ] :: Nil))#
  ]

  //MSET
  [#final def mset[[#A1: Show#]]([#key1: Key, value1: A1#]): Protocol.Aux[OK] =
    mset([#(key1, value1)# :: ] :: HNil)#
  ]

  //MSETNX
  [#final def msetnx[[#A1: Show#]]([#key1: Key, value1: A1#]): Protocol.Aux[Boolean] =
    msetnx([#(key1, value1)# :: ] :: HNil)#
  ]
}