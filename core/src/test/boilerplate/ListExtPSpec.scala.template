package laserdisc
package protocol

import org.scalacheck.Prop.forAll

final class ListExtPSpec extends ListPSpec {
  [1..5#property("The List extended protocol using lpush roundtrips successfully given key and [#value1#]") {
    forAll { (k: Key, [#v1: Int#], pi: PosInt) =>
      val protocol = lpush(k, [#v1#])
      assertEquals(protocol.encode, Arr(Bulk("LPUSH"), Bulk(k), [#Bulk(v1)#]))
      assertEquals(protocol.decode(Num(pi.value.toLong)), pi)
    }
  }#
  ]
  [1..5#property("The List extended protocol using rpush roundtrips successfully given key and [#value1#]") {
    forAll { (k: Key, [#v1: Int#], pi: PosInt) =>
      val protocol = rpush(k, [#v1#])
      assertEquals(protocol.encode, Arr(Bulk("RPUSH"), Bulk(k), [#Bulk(v1)#]))
      assertEquals(protocol.decode(Num(pi.value.toLong)), pi)
    }
  }#
  ]
}
